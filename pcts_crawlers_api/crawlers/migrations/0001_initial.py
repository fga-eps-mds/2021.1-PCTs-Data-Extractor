# Generated by Django 3.2.8 on 2021-10-24 04:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Crawler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(max_length=100, unique=True, verbose_name='Site Name')),
                ('url_root', models.CharField(max_length=1024, unique=True, verbose_name='Root Url')),
                ('task_name_prefix', models.CharField(max_length=50, unique=True, verbose_name='Task Name Prefix')),
                ('allowed_domains', models.JSONField(null=True, verbose_name='Allowed Domains (JSON List of strings)')),
                ('allowed_paths', models.JSONField(null=True, verbose_name='Allowed Paths (JSON List of strings)')),
                ('qs_search_keyword_param', models.CharField(max_length=500, null=True, verbose_name='Query String Params (JSON List Object (param, value))')),
                ('retries', models.IntegerField(default=3, null=True, verbose_name='Retries')),
                ('page_load_timeout', models.IntegerField(default=3, null=True, verbose_name='Page Load Timeout')),
                ('cron_minute', models.CharField(default='*', max_length=20, verbose_name='Crontab Minute')),
                ('cron_hour', models.CharField(default='*', max_length=20, verbose_name='Crontab Hour')),
                ('cron_day_of_week', models.CharField(default='*', max_length=20, verbose_name='Crontab Day of Week')),
                ('cron_day_of_month', models.CharField(default='*', max_length=20, verbose_name='Crontab Day of Month')),
                ('cron_month_of_year', models.CharField(default='*', max_length=20, verbose_name='Crontab Month of Year')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CrawlerExecutionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=100, verbose_name='Task Name')),
                ('start_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Start Datetime')),
                ('finish_datetime', models.DateTimeField(null=True, verbose_name='End Datetime')),
                ('status', models.IntegerField(choices=[(1, 'STARTED'), (2, 'SUCCESS'), (3, 'FAILED')], default=1, verbose_name='Execution Status')),
                ('crawler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crawler_executions_group', to='crawlers.crawler')),
            ],
        ),
        migrations.CreateModel(
            name='CrawlerExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.UUIDField(verbose_name='Task Run UUID')),
                ('task_name', models.CharField(max_length=100, verbose_name='Task Name')),
                ('start_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Start Datetime')),
                ('finish_datetime', models.DateTimeField(null=True, verbose_name='Finish Datetime')),
                ('keyword', models.CharField(max_length=1024, verbose_name='Keyword')),
                ('status', models.IntegerField(choices=[(1, 'STARTED'), (2, 'SUCCESS'), (3, 'FAILED')], default=1, verbose_name='Execution Status')),
                ('scraped_pages', models.IntegerField(null=True)),
                ('saved_records', models.IntegerField(null=True)),
                ('dropped_records', models.IntegerField(null=True)),
                ('error_log', models.TextField(null=True)),
                ('crawler_execution_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crawler_executions', to='crawlers.crawlerexecutiongroup')),
            ],
        ),
    ]
