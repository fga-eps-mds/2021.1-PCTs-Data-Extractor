version: "3.5"

x-pcts-crawlers-api-template:
  &pcts-crawlers-api-template
  restart: unless-stopped
  build:
    context: .
  image: pcts-crawlers-api
  environment:
    PROJECT_ENV_EXECUTOR: "DOCKER"
    USE_SPLASH: True
    PCTS_CRAWLERS_SPLASH_HOST: http://pcts-crawlers-splash:8050
    PCTS_DOCUMENTS_API_URL: http://pcts-documents:8000
    PCTS_DOCUMENTS_API_RECORDS_ENDPOINT: api/documents/
    POSTGRES_HOST: pcts-crawlers-postgres
    POSTGRES_PORT: 5432
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: test1234
    POSTGRES_DB: pcts_crawlers
    DJANGO_SUPERUSER_EMAIL: admin@example.com
    DJANGO_SUPERUSER_USERNAME: admin
    DJANGO_SUPERUSER_PASSWORD: admin
    CELERY_BROKER_URL: amqp://guest@pcts-crawlers-rabbitmq:5672
  networks:
    - pcts-network
  depends_on:
    pcts-crawlers-postgres:
      condition: service_healthy
  volumes:
    - .:/app
    - pip-cache:/usr/local/lib/python3.8/site-packages

services:
  pcts-crawlers-splash:
    hostname: pcts-crawlers-splash
    image: scrapinghub/splash
    container_name: pcts-crawlers-splash
    restart: unless-stopped
    ports:
      - 8050:8050
    networks:
      - pcts-network
    command: "--disable-private-mode"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8050"]
      interval: 10s
      timeout: 30s
      retries: 5

  pcts-crawlers-postgres:
    image: postgres:13
    container_name: pcts-crawlers-postgres
    hostname: pcts-crawlers-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=pcts-crawlers-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test1234
      - POSTGRES_DB=pcts_crawlers
    ports:
        - 5432:5432
    networks:
      - pcts-network
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "postgres"]
        interval: 5s
        retries: 5
    restart: unless-stopped
    volumes:
    - pcts-crawlers-postgres-data:/var/lib/postgresql/data

  pcts-crawlers-rabbitmq:
    image: rabbitmq:3.9.7
    container_name: pcts-crawlers-rabbitmq
    hostname: pcts-crawlers-rabbitmq
    restart: unless-stopped
    ports:
      - 5672:5672
    networks:
      - pcts-network
    volumes:
      - pcts-crawlers-rabbitmq-data:/var/lib/rabbitmq/
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 30s
      retries: 3

  # PCTS CRAWLERS DJANGO API ==============================================================================
  pcts-crawlers-api:
    container_name: pcts-crawlers-api
    <<: *pcts-crawlers-api-template
    ports:
      - 8002:8002
    command: ["sh", "scripts/start_dev.sh"]
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8002/api"]
      interval: 10s
      retries: 5
    # depends_on:
    #   pcts-crawlers-splash:
    #     condition: service_healthy

  pcts-crawlers-celery:
    <<: *pcts-crawlers-api-template
    container_name: pcts-crawlers-celery
    command: ["sh", "scripts/start_celery.sh"]
    depends_on:
      pcts-crawlers-rabbitmq:
        condition: service_healthy
      pcts-crawlers-api:
        condition: service_healthy

  pcts-crawlers-celery-scheduler:
    <<: *pcts-crawlers-api-template
    container_name: pcts-crawlers-celery-scheduler
    command: ["sh", "scripts/start_celery_scheduler.sh"]
    depends_on:
      pcts-crawlers-api:
        condition: service_healthy

  pcts-crawlers-celery-flower:
    <<: *pcts-crawlers-api-template
    container_name: pcts-crawlers-celery-flower
    ports:
      - 5555:5555
    command: ["sh", "scripts/start_celery_flower.sh"]
  # =======================================================================================================

volumes:
  pcts-crawlers-postgres-data:
    name: pcts-crawlers-postgres-data
  pip-cache:
    name: pcts-crawlers-api-pip-cache
  pcts-crawlers-rabbitmq-data:
    name: pcts-crawlers-rabbitmq-data

networks:
  pcts-network:
    name: pcts-network
    driver: bridge
